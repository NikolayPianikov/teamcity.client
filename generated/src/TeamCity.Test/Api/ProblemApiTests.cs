/* 
 * TeamCity REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TeamCity.Client;
using TeamCity.Api;
using TeamCity.Model;

namespace TeamCity.Test
{
    /// <summary>
    ///  Class for testing ProblemApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProblemApiTests
    {
        private ProblemApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProblemApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProblemApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProblemApi
            //Assert.IsInstanceOfType(typeof(ProblemApi), instance, "instance is a ProblemApi");
        }

        
        /// <summary>
        /// Test GetProblems2
        /// </summary>
        [Test]
        public void GetProblems2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locator = null;
            //string fields = null;
            //var response = instance.GetProblems2(locator, fields);
            //Assert.IsInstanceOf<ProblemsDto> (response, "response is ProblemsDto");
        }
        
        /// <summary>
        /// Test ServeInstance3
        /// </summary>
        [Test]
        public void ServeInstance3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string problemLocator = null;
            //string fields = null;
            //var response = instance.ServeInstance3(problemLocator, fields);
            //Assert.IsInstanceOf<ProblemDto> (response, "response is ProblemDto");
        }
        
    }

}
